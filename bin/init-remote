#! /bin/bash

root_dir=`dirname $0`/..
server=${1:-cromulence}

echo "initializing $server"

if ! ssh $server 'whoami'; then
  echo "Cannot log into server named $server. Ensure it is properly configured in ~/.ssh/config."
  echo "See README.md for details"
  exit 1
fi

ssh $server <<DOC
git config --global user.email "alexdisney@gmail.com"
git config --global user.name "BBallBattle"

if [ ! -e ~/git/bballbattle.git ]; then
  mkdir -p ~/git/bballbattle.git
  cd ~/git/bballbattle.git
  git init --bare
  git --bare update-server-info
fi
DOC

ssh $server <<DOC
echo "adding app repo to make working version of ddclient available"
# The version of ddclient in Ubuntu repositories is out of date and has a debilitating bug. A new repository must be added with a patched version of ddclient
sudo apt-add-repository -y ppa:nathan-renniewaldock/ppa

echo "installing apps"
sudo apt-get -y update
sudo apt-get -y install ddclient make g++ git daemontools build-essential ruby1.9.3 nginx openjdk-7-jre zlib1g-dev
sudo gem install bundler
DOC

# Add post receive hook
ssh $server "cat > ~/git/bballbattle.git/hooks/post-receive" <<DOC
#!/bin/sh
mkdir -p ~/apps/bballbattle
GIT_WORK_TREE=~/apps/bballbattle git checkout -f
git tag -a \`date "+%Y-%m-%d_%H%M%S"\` -m "Tag created by deploy script"
cd ~/apps/bballbattle
bundle install --without test
svc -t .
DOC
ssh $server "chmod +x ~/git/bballbattle.git/hooks/post-receive"

echo "configuring nginx"
ssh $server "sudo tee /etc/nginx/sites-enabled/bballbattle" < $root_dir/conf/bballbattle.nginx.conf
ssh $server <<DOC
  sudo rm /etc/nginx/sites-enabled/default
  sudo /etc/init.d/nginx restart
DOC

echo "configuring iptables"
ssh $server "sudo iptables-restore" < $root_dir/conf/ncaa.fw
ssh $server "sudo sed -i \"s|exit|iptables-restore < ~/apps/bballbattle/conf/ncaa.fw\nexit|\" /etc/rc.local"

echo "configuring ddclient"
ssh $server "sudo tee /etc/ddclient.conf" < $root_dir/conf/ddclient/ddclient.conf
ssh $server <<DOC
sudo chown root /etc/ddclient.conf # May not be necessary step
sudo ddclient
DOC

ssh $server <<DOC
if ! pgrep svscan; then
  /usr/bin/svscan ~/apps | logger -t supervise &
fi
DOC

echo "Doing initial deploy"
git push $server:git/bballbattle.git master
